# .github/workflows/ci.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Ensure this is your default branch name
  pull_request:
    branches:
      - master # Ensure this is your default branch name

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GitHub Container Registry

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Define image name and tag
      id: meta
      run: |
        # Get the repository name from GitHub context
        REPO_FULL_NAME="${{ github.repository }}"
        # Convert it to lowercase using shell command 'tr'
        LOWERCASE_REPO_NAME=$(echo "$REPO_FULL_NAME" | tr '[:upper:]' '[:lower:]')
        # Set the output variable 'IMAGE_NAME' with the lowercase name
        echo "IMAGE_NAME=ghcr.io/$LOWERCASE_REPO_NAME" >> "$GITHUB_OUTPUT"
        echo "TAG=${{ github.sha }}" >> "$GITHUB_OUTPUT"

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ steps.meta.outputs.IMAGE_NAME }}:${{ steps.meta.outputs.TAG }}
          ${{ steps.meta.outputs.IMAGE_NAME }}:master-latest
        file: ./Dockerfile # Assuming your Dockerfile is in the root
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Pytest with Coverage
      env:
        # Direct coverage.py to store its data file in /tmp, which is writable
        COVERAGE_FILE: /tmp/.coverage
      run: |
        docker run --rm ${{ steps.meta.outputs.IMAGE_NAME }}:master-latest \
        /bin/bash -c "pytest --cov=app --cov-report=xml"
